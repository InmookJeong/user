<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.mook.user.dao.MemberMapper">
	
	<select id="countByLoginDto" parameterType="kr.mook.user.common.dto.LoginDTO" resultType="int">
		/** MemberMapper.countByLoginDto */
		SELECT
			COUNT(M.id)
		FROM
			MEMBER M
		WHERE
			M.userId = #{userId}
			AND M.password = #{password}
	</select>
	
	<select id="countByUserId" parameterType="String" resultType="int">
		/** MemberMapper.countByUserId */
		SELECT
			COUNT(M.id)
		FROM
			MEMBER M
		WHERE
			M.userId = #{userId}
	</select>
	
	<select id="countByPhone" parameterType="String" resultType="int">
		/** MemberMapper.countByPhone */
		SELECT
			COUNT(M.id)
		FROM
			MEMBER M
		WHERE
			M.phone = #{phone}
	</select>
	
	<select id="countByEmail" parameterType="String" resultType="int">
		/** MemberMapper.countByEmail */
		SELECT
			COUNT(M.id)
		FROM
			MEMBER M
		WHERE
			M.email = #{email}
	</select>
	
	<select id="countByMemberDto" parameterType="kr.mook.user.member.dto.MemberDTO" resultType="int">
		/** MemberMapper.countByEmail */
		SELECT
			COUNT(M.id)
		FROM
			MEMBER M
		WHERE
			1=1
			<if test="userId != null and userId != ''">
				AND M.userId = #{userId}
			</if>
			<if test="name != null and name != ''">
				AND M.name = #{name}
			</if>
			<if test="email != null and email != ''">
				AND M.email = #{email}
			</if>
	</select>
	
	<select id="selectUserId" parameterType="kr.mook.user.member.dto.MemberDTO" resultType="String">
		/** MemberMapper.selectUserId */
		SELECT
			M.userId
		FROM
			MEMBER M
		WHERE
			M.name = #{name}
			AND M.email = #{email}
	</select>
	
	<select id="getNextId" resultType="int">
		/** MemberMapper.getNextId */
		SELECT
			CASE
				WHEN COUNT(M.id) > 0
					THEN MAX(M.id)+1
				ELSE 1
			END
		FROM
			MEMBER M
	</select>
	
	<insert id="insertMember" parameterType="kr.mook.user.common.dto.SignUpDTO">
		/** MemberMapper.insertMember */
		INSERT INTO MEMBER (
			id,
			userId,
			password,
			name,
			birth,
			gender,
			phone,
			email,
			nation,
			postNumber,
			address,
			addressDetail,
			createMemberId,
			createDate,
			isActive,
			isTempPassword,
			isAdmin
		) VALUES (
			#{id},
			#{userId},
			#{password},
			#{name},
			#{birth},
			#{gender},
			#{phone},
			#{email},
			#{nation},
			#{postNumber},
			#{address},
			#{addressDetail},
			#{id},
			now(),
			true,
			false,
			false
		)
	</insert>
	
	<update id="updateTempPassword" parameterType="kr.mook.user.member.dto.MemberDTO">
		/** MemberMapper.updateTempPassword */
		UPDATE MEMBER
		SET
			password = #{password},
			isTempPassword = true
		WHERE
			userId = #{userId}
	</update>
	
</mapper>